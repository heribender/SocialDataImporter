# Configuration of global properties.

sdi.dry-run=false

# if you have custom property overrid classes in another package root than our project configure the
# package roots here which have to be inclueded in the search. Comma separated.
sdi.propertiesoverride.includeroot=

sdi.outputDir=./../output

# custom person keys
# comma delimited
# supply custom fields which are not covered by the standard keys in person.properties 
sdi.person.customkeys =

#####################################
# Collectors
#####################################

sdi.collect.type = csv

# CSV collector
# *************

# name of the csv file
# either an absolute or a relative filepath
# productive its seen from <app-dir>/bin:
sdi.collect.csv.filename = ./../input/myCsvToImport.csv

# the used delimiter.
sdi.collect.csv.delimiter = ;

# Flag indicating if first row contains the field names
# true or false
sdi.collect.csv.headerrow = true

# Indicates the number of lines between the header and the data lines
# which have to been skipped
sdi.collect.csv.skipafterheader = 0

# comma delimited enumeration of the field names in the CSV file
# If headerrow is true this property is ignored. If headerrow is false, this property is mandatory. 
sdi.collect.csv.fieldnames =


###########################################
# Converters
# Specify a converter for particular fields
#
###########################################

# date field
sdi.converter.<fieldname> = toDate
sdi.converter.toDate.pattern = yyyy-MM-dd 
#sdi.converter.toDate.<fieldname>.pattern = 

# gender
sdi.converter.<fieldname> = toGender
sdi.converter.toGender.male=m
sdi.converter.toGender.female=f
sdi.converter.toGender.dontcare=-
sdi.converter.toGender.unknown=

#avatar image
sdi.converter.image = toJpgFromHexDump

#number list (e.g. for group membership)
sdi.converter.<fieldname> = toNumberList
sdi.converter.toNumberList.delimiter=/



###########################################
# Target
###########################################

# temp files (e.g. for later FTP upload) are stored here
sdi.target.tmpDir = ./../tmp

# If false, a failure on a person leads to the abort, if true, the next person is processed
# (if sdi.dry-run is true, this setting is ignored and the application behaves as it would be true). 
sdi.target.ignoreFailedPerson = false

###########################################
# TargetJobs
###########################################


# mail job: sends a mail to each person if set to true according the
# settings in mail.properties
# if false, no mail is sent
sdi.targetjob.mail = true

# sql job is applied on the persons fields which have been assigned
# to this job  (TODO: still used? DB-access is configured in persistence.xml)
sdi.target.job.sql = sql
sdi.target.job.sql.connectString = 
sdi.target.job.sql.user = 
sdi.target.job.sql.password = 

# ftp job is applied on the persons fields which have been assigned
# to this job 
sdi.targetjob.ftp = ftp
sdi.targetjob.ftp.destinationDir = 
# FTP-CommandLine
# Usage: [options] <hostname> <username> <password>
# Options:
#  -a - use local active mode (default is local passive)
#  -A - anonymous login (omit username and password parameters)
#  -e - use EPSV with IPv4 (default false)
#  -k secs - use keep-alive timer (setControlKeepAliveTimeout)
#  -p true|false|protocol[,true|false] - use FTPSClient with the specified protocol and/or isImplicit setting
#  -w msec - wait time for keep-alive reply (setControlKeepAliveReplyTimeout)
#  -T  all|valid|none - use one of the built-in TrustManager implementations (none = JVM default)
#  -PrH server[:port] - HTTP Proxy host and optional port[80]
#  -PrU user - HTTP Proxy server username
#  -PrP password - HTTP Proxy server password
sdi.targetjob.ftp.cmdLine =  
 


