# The password is stored as SHA256 with a prepended global salt.
# The salt can be found in ow_includes/config.php as property OW_PASSWORD_SALT
# You have to set this value in your instance configuration
ox.passwordsalt=

# Each user is assigned to an account type (table ow_base_user.accountType)

# The account type defines the set of profile questions. A standard installation knows only 
# one account type. Verify this value in ow_base_question_account_type and override it in your instance
# configuration if necessary
ox.ow_base_user.accounttype=

# Flag indicating if users email address has been verified.
# TODO: (if 0) additional steps have to be done like providing a dataset in ow_base_email_verify and 
# send an appropriate link (with the hash) to the new user
ox.ow_base_user.emailVerify=1

# the IP of the remote host of the joining user (according to documentation)
# Reverse-engineered: 
#     PHP: ip2long(OW::getRequest()->getRemoteAddress())
#          examinating real values of real instances only show nonsense.
#          In Oxwall Version 1.7.1 the value is only set and never read, so it does not matter what to
#          insert here. (???)
ox.ow_base_user.joinIp=1234

###########################################
# Custom profile fields ("questions")
# key: one of the keys used in person (see person.properties),  prefixed by 'ox.target.qn.'
# value: <type>:[<questionClass>:]<questionName>
#    where:
#    type: [text|number|date|custom], derived from the the enum: 
#        text                         -> text
#        select, boolean, multiselect -> number
#        datetime                     -> date
#        custom                       a custom converter. As second parameter which defines the the 
#                                     custom question class must be added (see example gender). The name
#                                     must match the value of the @OxCustomQuestion annotation of the
#                                     class which implements the converter.
#    questionClass: only needed if type is custom. Bean name of a specialized descendant of OxProfileQuestion 
#    questionName: [sex|realname|birthdate|<hash>]
#        custom questions have a hash as name which can be looked up as follows:
#            - ow_base_language_value.value=<desired question text> (e.g. "Phonenumber") -> the keyId of
#              of the found data refers to the id of ow_base_language_key
#            - ow_base_language_key.key contains the hash (e.g. "questions_question_0b0e44da932442a185649d851e108d71_label"
#            - found hash (questionName) in this example is 0b0e44da932442a185649d851e108d71
###########################################

ox.target.qn.person.birthDate=date:birthdate
ox.target.qn.person.fullName=text:realname
ox.target.qn.person.gender=custom:gendermap:sex
ox.target.qn.person.telephone=text:0b0e44da932442a185649d851e108d71
ox.target.qn.person.whymember=text:c441a8a9b955647cdf4c81562d39068a

###########################################
# Gender / sex: oxwall stores it as int which can be looked up as follows:
# value x (int): Lookup id of ow_base_language_key.questions_question_sex_value_x which refers to keyId of 
# table ow_base_language_value
# (see ConverterGender)
ox.target.sex.male=1
ox.target.sex.female=2
ox.target.sex.dontcare=4

###########################################
# Group assignment of new user
# This groups are assigned to each new user, regardless of possible individual memberships parsed during
# collection (see ConverterMembership)
# value: enumeration of groupId's, comma separated
#        (groupId's can be looked up in table ow_groups_group)
###########################################
ox.target.defaultGroups = 10

###########################################
# Role assignment of new user
# This roles are assigned to each new user
# value: enumeration of roleId's, comma separated
#        (roleId's can be looked up in table ow_base_authorization_role)
###########################################
ox.target.defaultRoles = 12

###########################################
# The privacy setting of group assignments
# This value is assigned to each entry in ow_groups_group_user
# value: everybody
#        ??? I do not know what else and what consequences this value has. My test installation all
#            all group memberships have this value 
###########################################
ox.target.groups.privacy = everybody

###########################################
# Flag indicating if collected data might contain avatar pictures. 
#    true:  avatar picture files are created and uploaded by FTP job
#    false: no avatar picture files in collected data. FTP job will not
#           be initialized and executed (all FTP job settings are ignored)
###########################################
ox.target.hasAvatar = true


